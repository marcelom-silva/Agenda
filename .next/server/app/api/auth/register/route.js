"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},17103:(e,r,o)=>{o.r(r),o.d(r,{originalPathname:()=>m,patchFetch:()=>R,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>E});var s={};o.r(s),o.d(s,{POST:()=>d});var a=o(49303),t=o(88716),n=o(60670),i=o(87070),c=o(98691),u=o(52663);async function d(e){try{console.log("[REGISTRO DEBUG] Iniciando processo de registro");let{name:r,email:o,password:s}=await e.json();if(console.log(`[REGISTRO DEBUG] Dados recebidos: nome=${r}, email=${o}, senha=***`),!r||!o||!s)return console.log("[REGISTRO DEBUG] Valida\xe7\xe3o falhou: campos obrigat\xf3rios ausentes"),i.NextResponse.json({message:"Nome, email e senha s\xe3o obrigat\xf3rios"},{status:400});try{if(console.log(`[REGISTRO DEBUG] Verificando se email j\xe1 existe: ${o}`),console.log("[REGISTRO DEBUG] Detalhes do Prisma:",{databaseUrl:process.env.DATABASE_URL||"n\xe3o definido",nodeEnv:"production"}),await u._.user.findUnique({where:{email:o}}))return console.log("[REGISTRO DEBUG] Email j\xe1 em uso"),i.NextResponse.json({message:"Este email j\xe1 est\xe1 em uso"},{status:400});console.log("[REGISTRO DEBUG] Email dispon\xedvel para registro")}catch(e){return console.error("[REGISTRO DEBUG] Erro ao verificar usu\xe1rio existente:",e),i.NextResponse.json({message:"N\xe3o foi poss\xedvel verificar o cadastro. Por favor, tente novamente mais tarde.",debug:{errorMessage:e instanceof Error?e.message:"Erro desconhecido",errorStack:e instanceof Error?e.stack:"Stack n\xe3o dispon\xedvel",errorType:e instanceof Error?e.constructor.name:typeof e}},{status:503})}console.log("[REGISTRO DEBUG] Gerando hash da senha");let a=await (0,c.vp)(s,10);try{console.log("[REGISTRO DEBUG] Tentando criar usu\xe1rio no banco de dados");let{password:e,...s}=await u._.user.create({data:{name:r,email:o,password:a}});return console.log("[REGISTRO DEBUG] Usu\xe1rio criado com sucesso:",s),i.NextResponse.json({message:"Usu\xe1rio registrado com sucesso",user:s},{status:201})}catch(e){return console.error("[REGISTRO DEBUG] Erro espec\xedfico ao criar usu\xe1rio:",e),i.NextResponse.json({message:"N\xe3o foi poss\xedvel criar sua conta. Por favor, tente novamente mais tarde.",debug:{errorMessage:e instanceof Error?e.message:"Erro desconhecido",errorStack:e instanceof Error?e.stack:"Stack n\xe3o dispon\xedvel",errorType:e instanceof Error?e.constructor.name:typeof e}},{status:503})}}catch(e){return console.error("[REGISTRO DEBUG] Erro geral ao registrar usu\xe1rio:",e),i.NextResponse.json({message:"Ocorreu um erro inesperado. Por favor, tente novamente mais tarde.",debug:{errorMessage:e instanceof Error?e.message:"Erro desconhecido",errorStack:e instanceof Error?e.stack:"Stack n\xe3o dispon\xedvel",errorType:e instanceof Error?e.constructor.name:typeof e}},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:t.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Users\\User\\Cryptos\\projects\\agenda-pocketplanner\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:E,serverHooks:g}=p,m="/api/auth/register/route";function R(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:E})}},52663:(e,r,o)=>{o.d(r,{_:()=>a});let s=require("@prisma/client"),a=global.prisma||(()=>{let e=process.env.DATABASE_URL||"file:./dev.db";return new s.PrismaClient({datasources:{db:{url:e}}})})()}};var r=require("../../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),s=r.X(0,[276,901,70],()=>o(17103));module.exports=s})();